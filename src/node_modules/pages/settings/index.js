import React, { useEffect, useState, useContext } from 'react';
import { Navigate } from 'react-router-dom';

import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage'
import { CurrentUserContext } from 'contexts/currentUser';

const Settings = () => {
    const [currentUserState, dispatch] = useContext(CurrentUserContext);
    const apiUrl = '/user';
    const [{ response, error }, doFetch] = useFetch(apiUrl);
    const [image, setImage] = useState('');
    const [username, setUsername] = useState('');
    const [bio, setBio] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isSuccessfullLogout, setIsSuccessfullLogout] = useState(false);
    const [, setToken] = useLocalStorage('token');

    const handleSubmit = event => {
        event.preventDefault();

        doFetch({
            method: 'put',
            data: {
                user: {
                    ...currentUserState.currentUser,
                    image,
                    username,
                    bio,
                    email
                }
            }
        });
    }

    const logout = event => {
        event.preventDefault();

        dispatch({ type: 'LOGOUT' });
        setToken('');
        setIsSuccessfullLogout(true);
    }

    useEffect(() => {
        if (!currentUserState.currentUser) {
            return;
        }

        const {
            image,
            username,
            bio,
            email
        } = currentUserState.currentUser;

        setImage(image);
        setUsername(username);
        setBio(bio);
        setEmail(email);

    }, [currentUserState.currentUser]);

    useEffect(() => {
        if (!response) {
            return;
        }

        dispatch({ type: 'SET_AUTHORIZED', payload: response.user });
    }, [response]);

    if (isSuccessfullLogout || currentUserState.isLoggedIn === false) {
        return <Navigate to='/' />
    }

    return (
        <div className='settings-page'>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                        <h1 className='text-xs-center'>Your Settings</h1>
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        className='form-control'
                                        type='text'
                                        placeholder='URL of profile picture'
                                        value={image}
                                        onChange={e => setImage(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        className='form-control form-control-lg'
                                        type='text'
                                        placeholder='Username'
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <textarea
                                        className='form-control form-control-lg'
                                        type='text'
                                        placeholder='Short bio about you'
                                        rows='8'
                                        value={bio}
                                        onChange={e => setBio(e.target.value)}
                                    ></textarea>
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        className='form-control form-control-lg'
                                        type='email'
                                        placeholder='Email'
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        className='form-control form-control-lg'
                                        type='password'
                                        placeholder='Password'
                                        value={password}
                                        onChange={e => setPassword(e.target.value)}
                                    />
                                </fieldset>
                                <button className='btn btn-lg btn-primary pull-xs-right' type='submit'>Update Settings</button>
                            </fieldset>
                        </form>
                        <hr />
                        <button onClick={logout} className='btn btn-outline-danger'>Or click here to logout.</button>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default Settings;